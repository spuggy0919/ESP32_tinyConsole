{"className":"EspClass",
"classObj":"espclass",
"constructorPrototype":"EspClass::EspClass();",
"prototypesArray":[
"void restart();",
"uint32_t getHeapSize();",
"uint32_t getFreeHeap();",
"uint32_t getMinFreeHeap();",
"uint32_t getMaxAllocHeap();",
"uint32_t getPsramSize();",
"uint32_t getFreePsram();",
"uint32_t getMinFreePsram();",
"uint32_t getMaxAllocPsram();",
"uint16_t getChipRevision();",
"uint8_t getChipCores();",
"uint32_t getCpuFreqMHz();",
"uint32_t getCycleCount();",
"void deepSleep(uint32_t time_us);",
"uint32_t getFlashChipSize();",
"uint32_t getFlashChipSpeed();",
"uint8_t getFlashChipMode();",
"uint32_t magicFlashChipSize(uint8_t byte);",
"uint32_t magicFlashChipSpeed(uint8_t byte);",
"uint8_t magicFlashChipMode(uint8_t byte);",
"uint32_t getSketchSize();",
"uint8_t* getSketchMD5();",
"uint32_t getFreeSketchSpace();",
"bool flashEraseSector(uint32_t sector);",
"bool flashWrite(uint32_t offset, uint32_t* data, size_t size);",
"bool flashRead(uint32_t offset, uint32_t* data, size_t size);",
"bool partitionEraseRange(uint8_t* partition, uint32_t offset, size_t size);",
"bool partitionWrite(uint8_t* partition, uint32_t offset, uint32_t* data, size_t size);",
"bool partitionRead(uint8_t* partition, uint32_t offset, uint32_t* data, size_t size);",
"uint32_t getEfuseMac();"],
"methodNames":[]}