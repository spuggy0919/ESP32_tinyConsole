{
    "classObj" : "rectangle", 
    "constructorPrototype" : "PubSubClient::PubSubClient();", 
    "prototypesArray" : [
        "PubSubClient& setServer(IPAddress ip, uint16_t port);",
        "PubSubClient& setServer(uint8_t * ip, uint16_t port);",
        "PubSubClient& setServer(char * domain, uint16_t port);",
        "PubSubClient& setCallback(MQTT_CALLBACK_SIGNATURE);",
        "PubSubClient& setClient(Client& client);",
        "PubSubClient& setStream(Stream& stream);",
        "PubSubClient& setKeepAlive(uint16_t keepAlive);",
        "PubSubClient& setSocketTimeout(uint16_t timeout);",

        "boolean setBufferSize(uint16_t size);",
        "uint16_t getBufferSize();",
     
        "boolean connect(char* id);",
        "boolean connect(char* id, char* user, char* pass);",
        "boolean connect(char* id, char* willTopic, uint8_t willQos, boolean willRetain, char* willMessage);",
        "boolean connect(char* id, char* user, char* pass, char* willTopic, uint8_t willQos, boolean willRetain, char* willMessage);",
        "boolean connect(char* id, char* user, char* pass, char* willTopic, uint8_t willQos, boolean willRetain, char* willMessage, boolean cleanSession);",
        "void disconnect();",
        "boolean publish(char* topic, char* payload);",
        "boolean publish(char* topic, char* payload, boolean retained);",
        "boolean publish(char* topic, uint8_t * payload, unsigned int plength);",
        "boolean publish(char* topic, uint8_t * payload, unsigned int plength, boolean retained);",
        "boolean publish_P(char* topic, char* payload, boolean retained);",
        "boolean publish_P(char* topic, uint8_t * payload, unsigned int plength, boolean retained);",

        "boolean beginPublish(char* topic, unsigned int plength, boolean retained);",
        "int endPublish();",

        "virtual size_t write(uint8_t);",
        "virtual size_t write(uint8_t *buffer, size_t size);",
        "boolean subscribe(char* topic);",
        "boolean subscribe(char* topic, uint8_t qos);",
        "boolean unsubscribe(char* topic);",
        "boolean loop();",
        "boolean connected();",
        "int state();"
    ],
    "className" :"",
    "methodNames":[]
}